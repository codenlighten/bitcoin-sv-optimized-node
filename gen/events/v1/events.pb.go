// Code generated by protoc-gen-go. DO NOT EDIT.
// Stub file for Bitcoin SV protocol implementation

package eventsv1

import (
	"google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Envelope represents an event envelope
type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId     string `protobuf:"bytes,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	TraceId   string `protobuf:"bytes,2,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	Payload   []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Timestamp int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EmittedAt string `protobuf:"bytes,5,opt,name=emitted_at,json=emittedAt,proto3" json:"emitted_at,omitempty"`
	Net       string `protobuf:"bytes,6,opt,name=net,proto3" json:"net,omitempty"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
}

func (x *Envelope) String() string {
	return "envelope"
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	return nil
}

func (x *Envelope) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *Envelope) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *Envelope) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Envelope) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// RawTx represents a raw transaction
type RawTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx     []byte `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	PeerId string `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	SeeAt  string `protobuf:"bytes,3,opt,name=see_at,json=seeAt,proto3" json:"see_at,omitempty"`
}

// TxValidated represents a validated transaction
type TxValidated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid        []byte `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Size        uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	SigChecks   uint32 `protobuf:"varint,3,opt,name=sig_checks,json=sigChecks,proto3" json:"sig_checks,omitempty"`
	ValidatedAt string `protobuf:"bytes,4,opt,name=validated_at,json=validatedAt,proto3" json:"validated_at,omitempty"`
}

// TxReady represents a transaction ready for mining
type TxReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid      []byte  `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	FeeRate   float64 `protobuf:"fixed64,2,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	Ancestors uint32  `protobuf:"varint,3,opt,name=ancestors,proto3" json:"ancestors,omitempty"`
	Weight    uint32  `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Priority  string  `protobuf:"bytes,5,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *RawTx) Reset() {
	*x = RawTx{}
}

func (x *RawTx) String() string {
	return "raw_tx"
}

func (*RawTx) ProtoMessage() {}

func (x *RawTx) ProtoReflect() protoreflect.Message {
	return nil
}

func (x *RawTx) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *TxValidated) Reset() {
	*x = TxValidated{}
}

func (x *TxValidated) String() string {
	return "tx_validated"
}

func (*TxValidated) ProtoMessage() {}

func (x *TxValidated) ProtoReflect() protoreflect.Message {
	return nil
}

func (x *TxReady) Reset() {
	*x = TxReady{}
}

func (x *TxReady) String() string {
	return "tx_ready"
}

func (*TxReady) ProtoMessage() {}

func (x *TxReady) ProtoReflect() protoreflect.Message {
	return nil
}
